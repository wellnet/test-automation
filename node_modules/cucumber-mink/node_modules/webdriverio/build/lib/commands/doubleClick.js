/**
 *
 * Double-click on an element based on given selector.
 *
 * <example>
    :example.html
    <button id="myButton" ondblclick="document.getElementById('someText').innerHTML='I was dblclicked'">Click me</button>
    <div id="someText">I was not clicked</div>

    :doubleClick.js
    client
        .doubleClick('#myButton')
        .getText('#someText').then(function(value) {
            assert(value === 'I was dblclicked'); // true
        });
 * </example>
 *
 * @param {String} selector element to double click on. If it matches with more than on DOM-element it automatically clicks on the first element
 *
 * @uses protocol/element, protocol/moveTo, protocol/doDoubleClick, protocol/touchDoubleClick
 * @type action
 *
 */

"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var doubleClick = function doubleClick(selector) {
    var _this = this;

    if (this.isMobile) {
        return this.element(selector).then(function (res) {
            return _this.touchDoubleClick(res.value.ELEMENT);
        });
    }

    return this.element(selector).then(function (res) {
        return _this.moveTo(res.value.ELEMENT);
    }).doDoubleClick();
};

exports["default"] = doubleClick;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9kb3VibGVDbGljay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSxJQUFJLFdBQVcsR0FBRyxTQUFkLFdBQVcsQ0FBYSxRQUFRLEVBQUU7OztBQUNsQyxRQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7QUFDZixlQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBRzttQkFBSyxNQUFLLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO1NBQUEsQ0FBQyxDQUFBO0tBQ3hGOztBQUVELFdBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUFHO2VBQ25DLE1BQUssTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDO0tBQUEsQ0FDakMsQ0FBQyxhQUFhLEVBQUUsQ0FBQTtDQUNwQixDQUFBOztxQkFFYyxXQUFXIiwiZmlsZSI6ImRvdWJsZUNsaWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogRG91YmxlLWNsaWNrIG9uIGFuIGVsZW1lbnQgYmFzZWQgb24gZ2l2ZW4gc2VsZWN0b3IuXG4gKlxuICogPGV4YW1wbGU+XG4gICAgOmV4YW1wbGUuaHRtbFxuICAgIDxidXR0b24gaWQ9XCJteUJ1dHRvblwiIG9uZGJsY2xpY2s9XCJkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc29tZVRleHQnKS5pbm5lckhUTUw9J0kgd2FzIGRibGNsaWNrZWQnXCI+Q2xpY2sgbWU8L2J1dHRvbj5cbiAgICA8ZGl2IGlkPVwic29tZVRleHRcIj5JIHdhcyBub3QgY2xpY2tlZDwvZGl2PlxuXG4gICAgOmRvdWJsZUNsaWNrLmpzXG4gICAgY2xpZW50XG4gICAgICAgIC5kb3VibGVDbGljaygnI215QnV0dG9uJylcbiAgICAgICAgLmdldFRleHQoJyNzb21lVGV4dCcpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGFzc2VydCh2YWx1ZSA9PT0gJ0kgd2FzIGRibGNsaWNrZWQnKTsgLy8gdHJ1ZVxuICAgICAgICB9KTtcbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc2VsZWN0b3IgZWxlbWVudCB0byBkb3VibGUgY2xpY2sgb24uIElmIGl0IG1hdGNoZXMgd2l0aCBtb3JlIHRoYW4gb24gRE9NLWVsZW1lbnQgaXQgYXV0b21hdGljYWxseSBjbGlja3Mgb24gdGhlIGZpcnN0IGVsZW1lbnRcbiAqXG4gKiBAdXNlcyBwcm90b2NvbC9lbGVtZW50LCBwcm90b2NvbC9tb3ZlVG8sIHByb3RvY29sL2RvRG91YmxlQ2xpY2ssIHByb3RvY29sL3RvdWNoRG91YmxlQ2xpY2tcbiAqIEB0eXBlIGFjdGlvblxuICpcbiAqL1xuXG5sZXQgZG91YmxlQ2xpY2sgPSBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgICBpZiAodGhpcy5pc01vYmlsZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbGVtZW50KHNlbGVjdG9yKS50aGVuKChyZXMpID0+IHRoaXMudG91Y2hEb3VibGVDbGljayhyZXMudmFsdWUuRUxFTUVOVCkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudChzZWxlY3RvcikudGhlbigocmVzKSA9PlxuICAgICAgICB0aGlzLm1vdmVUbyhyZXMudmFsdWUuRUxFTUVOVClcbiAgICApLmRvRG91YmxlQ2xpY2soKVxufVxuXG5leHBvcnQgZGVmYXVsdCBkb3VibGVDbGlja1xuIl19
