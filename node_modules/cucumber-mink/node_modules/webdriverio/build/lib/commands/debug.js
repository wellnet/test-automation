/**
 *
 * This command helps you to debug your integration tests. It stops the running queue and gives
 * you time to jump into the browser and check the state of your application (e.g. using the
 * dev tools). Once you are done go to the command line and press Enter.
 *
 * <example>
    :debug.js
    client
        .setValue('#input', 'FOO')
        .debug() // jumping into the browser and change value of #input to 'BAR'
        .getValue('#input').then(function(value) {
            console.log(value); // outputs: "BAR"
        })
        .end();
 * </example>
 *
 * @type utility
 *
 */

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _readline = require('readline');

var _readline2 = _interopRequireDefault(_readline);

var debug = function debug() {
    var _this = this;

    var RL = _readline2['default'].createInterface({
        input: process.stdin,
        output: process.stdout
    });

    var logLevel = this.logger.logLevel;
    this.logger.logLevel = 'verbose';
    this.logger.debug();

    return new _Promise(function (resolve) {
        RL.question('', function () {
            _this.logger.logLevel = logLevel;
            RL.close();
            resolve();
        });
    });
};

exports['default'] = debug;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9kZWJ1Zy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQXFCcUIsVUFBVTs7OztBQUUvQixJQUFJLEtBQUssR0FBRyxTQUFSLEtBQUssR0FBZTs7O0FBQ3BCLFFBQU0sRUFBRSxHQUFHLHNCQUFTLGVBQWUsQ0FBQztBQUNoQyxhQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7QUFDcEIsY0FBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNO0tBQ3pCLENBQUMsQ0FBQTs7QUFFRixRQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQTtBQUNuQyxRQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUE7QUFDaEMsUUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQTs7QUFFbkIsV0FBTyxhQUFZLFVBQUMsT0FBTyxFQUFLO0FBQzVCLFVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLFlBQU07QUFDbEIsa0JBQUssTUFBTSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUE7QUFDL0IsY0FBRSxDQUFDLEtBQUssRUFBRSxDQUFBO0FBQ1YsbUJBQU8sRUFBRSxDQUFBO1NBQ1osQ0FBQyxDQUFBO0tBQ0wsQ0FBQyxDQUFBO0NBQ0wsQ0FBQTs7cUJBRWMsS0FBSyIsImZpbGUiOiJkZWJ1Zy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIFRoaXMgY29tbWFuZCBoZWxwcyB5b3UgdG8gZGVidWcgeW91ciBpbnRlZ3JhdGlvbiB0ZXN0cy4gSXQgc3RvcHMgdGhlIHJ1bm5pbmcgcXVldWUgYW5kIGdpdmVzXG4gKiB5b3UgdGltZSB0byBqdW1wIGludG8gdGhlIGJyb3dzZXIgYW5kIGNoZWNrIHRoZSBzdGF0ZSBvZiB5b3VyIGFwcGxpY2F0aW9uIChlLmcuIHVzaW5nIHRoZVxuICogZGV2IHRvb2xzKS4gT25jZSB5b3UgYXJlIGRvbmUgZ28gdG8gdGhlIGNvbW1hbmQgbGluZSBhbmQgcHJlc3MgRW50ZXIuXG4gKlxuICogPGV4YW1wbGU+XG4gICAgOmRlYnVnLmpzXG4gICAgY2xpZW50XG4gICAgICAgIC5zZXRWYWx1ZSgnI2lucHV0JywgJ0ZPTycpXG4gICAgICAgIC5kZWJ1ZygpIC8vIGp1bXBpbmcgaW50byB0aGUgYnJvd3NlciBhbmQgY2hhbmdlIHZhbHVlIG9mICNpbnB1dCB0byAnQkFSJ1xuICAgICAgICAuZ2V0VmFsdWUoJyNpbnB1dCcpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHZhbHVlKTsgLy8gb3V0cHV0czogXCJCQVJcIlxuICAgICAgICB9KVxuICAgICAgICAuZW5kKCk7XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogQHR5cGUgdXRpbGl0eVxuICpcbiAqL1xuXG5pbXBvcnQgcmVhZGxpbmUgZnJvbSAncmVhZGxpbmUnXG5cbmxldCBkZWJ1ZyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBSTCA9IHJlYWRsaW5lLmNyZWF0ZUludGVyZmFjZSh7XG4gICAgICAgIGlucHV0OiBwcm9jZXNzLnN0ZGluLFxuICAgICAgICBvdXRwdXQ6IHByb2Nlc3Muc3Rkb3V0XG4gICAgfSlcblxuICAgIGxldCBsb2dMZXZlbCA9IHRoaXMubG9nZ2VyLmxvZ0xldmVsXG4gICAgdGhpcy5sb2dnZXIubG9nTGV2ZWwgPSAndmVyYm9zZSdcbiAgICB0aGlzLmxvZ2dlci5kZWJ1ZygpXG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgUkwucXVlc3Rpb24oJycsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLmxvZ0xldmVsID0gbG9nTGV2ZWxcbiAgICAgICAgICAgIFJMLmNsb3NlKClcbiAgICAgICAgICAgIHJlc29sdmUoKVxuICAgICAgICB9KVxuICAgIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IGRlYnVnXG4iXX0=
