/**
 *
 * Return true if the selected DOM-element found by given selector is visible.
 *
 * <example>
    :index.html
    <div id="notDisplayed" style="display: none"></div>
    <div id="notVisible" style="visibility: hidden"></div>
    <div id="notInViewport" style="position:absolute; left: 9999999"></div>
    <div id="zeroOpacity" style="opacity: 0"></div>

    :isVisible.js
    client
        .isVisible('#notDisplayed').then(function(isVisible) {
            console.log(isVisible); // outputs: false
        })
        .isVisible('#notVisible').then(function(isVisible) {
            console.log(isVisible); // outputs: false
        })
        .isVisible('#notExisting').then(function(isVisible) {
            console.log(isVisible); // outputs: false
        })
        .isVisible('#notInViewport').then(function(isVisible) {
            console.log(isVisible); // outputs: true!!!
        })
        .isVisible('#zeroOpacity').then(function(isVisible) {
            console.log(isVisible); // outputs: true!!!
        });
 * </example>
 *
 * @param   {String}             selector  DOM-element
 * @returns {Boolean|Boolean[]}            true if element(s)* [is|are] visible
 *
 * @uses protocol/elements, protocol/elementIdDisplayed
 * @type state
 *
 */

"use strict";

var _getIterator = require("babel-runtime/core-js/get-iterator")["default"];

Object.defineProperty(exports, "__esModule", {
    value: true
});
var isVisible = function isVisible(selector) {
    var _this = this;

    return this.elements(selector).then(function (res) {
        /**
         * if element does not exist it is automatically not visible ;-)
         */
        if (!res.value || res.value.length === 0) {
            return false;
        }

        var elementIdDisplayedCommands = [];
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
            for (var _iterator = _getIterator(res.value), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                var elem = _step.value;

                elementIdDisplayedCommands.push(_this.elementIdDisplayed(elem.ELEMENT));
            }
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally {
            try {
                if (!_iteratorNormalCompletion && _iterator["return"]) {
                    _iterator["return"]();
                }
            } finally {
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }

        return _this.unify(elementIdDisplayedCommands, {
            extractValue: true
        });
    });
};

exports["default"] = isVisible;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9pc1Zpc2libGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0NBLElBQUksU0FBUyxHQUFHLFNBQVosU0FBUyxDQUFhLFFBQVEsRUFBRTs7O0FBQ2hDLFdBQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUFHLEVBQUs7Ozs7QUFJekMsWUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBQ3RDLG1CQUFPLEtBQUssQ0FBQTtTQUNmOztBQUVELFlBQUksMEJBQTBCLEdBQUcsRUFBRSxDQUFBOzs7Ozs7QUFDbkMsOENBQWlCLEdBQUcsQ0FBQyxLQUFLLDRHQUFFO29CQUFuQixJQUFJOztBQUNULDBDQUEwQixDQUFDLElBQUksQ0FBQyxNQUFLLGtCQUFrQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFBO2FBQ3pFOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUQsZUFBTyxNQUFLLEtBQUssQ0FBQywwQkFBMEIsRUFBRTtBQUMxQyx3QkFBWSxFQUFFLElBQUk7U0FDckIsQ0FBQyxDQUFBO0tBQ0wsQ0FBQyxDQUFBO0NBQ0wsQ0FBQTs7cUJBRWMsU0FBUyIsImZpbGUiOiJpc1Zpc2libGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBSZXR1cm4gdHJ1ZSBpZiB0aGUgc2VsZWN0ZWQgRE9NLWVsZW1lbnQgZm91bmQgYnkgZ2l2ZW4gc2VsZWN0b3IgaXMgdmlzaWJsZS5cbiAqXG4gKiA8ZXhhbXBsZT5cbiAgICA6aW5kZXguaHRtbFxuICAgIDxkaXYgaWQ9XCJub3REaXNwbGF5ZWRcIiBzdHlsZT1cImRpc3BsYXk6IG5vbmVcIj48L2Rpdj5cbiAgICA8ZGl2IGlkPVwibm90VmlzaWJsZVwiIHN0eWxlPVwidmlzaWJpbGl0eTogaGlkZGVuXCI+PC9kaXY+XG4gICAgPGRpdiBpZD1cIm5vdEluVmlld3BvcnRcIiBzdHlsZT1cInBvc2l0aW9uOmFic29sdXRlOyBsZWZ0OiA5OTk5OTk5XCI+PC9kaXY+XG4gICAgPGRpdiBpZD1cInplcm9PcGFjaXR5XCIgc3R5bGU9XCJvcGFjaXR5OiAwXCI+PC9kaXY+XG5cbiAgICA6aXNWaXNpYmxlLmpzXG4gICAgY2xpZW50XG4gICAgICAgIC5pc1Zpc2libGUoJyNub3REaXNwbGF5ZWQnKS50aGVuKGZ1bmN0aW9uKGlzVmlzaWJsZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coaXNWaXNpYmxlKTsgLy8gb3V0cHV0czogZmFsc2VcbiAgICAgICAgfSlcbiAgICAgICAgLmlzVmlzaWJsZSgnI25vdFZpc2libGUnKS50aGVuKGZ1bmN0aW9uKGlzVmlzaWJsZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coaXNWaXNpYmxlKTsgLy8gb3V0cHV0czogZmFsc2VcbiAgICAgICAgfSlcbiAgICAgICAgLmlzVmlzaWJsZSgnI25vdEV4aXN0aW5nJykudGhlbihmdW5jdGlvbihpc1Zpc2libGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlzVmlzaWJsZSk7IC8vIG91dHB1dHM6IGZhbHNlXG4gICAgICAgIH0pXG4gICAgICAgIC5pc1Zpc2libGUoJyNub3RJblZpZXdwb3J0JykudGhlbihmdW5jdGlvbihpc1Zpc2libGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlzVmlzaWJsZSk7IC8vIG91dHB1dHM6IHRydWUhISFcbiAgICAgICAgfSlcbiAgICAgICAgLmlzVmlzaWJsZSgnI3plcm9PcGFjaXR5JykudGhlbihmdW5jdGlvbihpc1Zpc2libGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlzVmlzaWJsZSk7IC8vIG91dHB1dHM6IHRydWUhISFcbiAgICAgICAgfSk7XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogQHBhcmFtICAge1N0cmluZ30gICAgICAgICAgICAgc2VsZWN0b3IgIERPTS1lbGVtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbnxCb29sZWFuW119ICAgICAgICAgICAgdHJ1ZSBpZiBlbGVtZW50KHMpKiBbaXN8YXJlXSB2aXNpYmxlXG4gKlxuICogQHVzZXMgcHJvdG9jb2wvZWxlbWVudHMsIHByb3RvY29sL2VsZW1lbnRJZERpc3BsYXllZFxuICogQHR5cGUgc3RhdGVcbiAqXG4gKi9cblxubGV0IGlzVmlzaWJsZSA9IGZ1bmN0aW9uIChzZWxlY3Rvcikge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnRzKHNlbGVjdG9yKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGlmIGVsZW1lbnQgZG9lcyBub3QgZXhpc3QgaXQgaXMgYXV0b21hdGljYWxseSBub3QgdmlzaWJsZSA7LSlcbiAgICAgICAgICovXG4gICAgICAgIGlmICghcmVzLnZhbHVlIHx8IHJlcy52YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGVsZW1lbnRJZERpc3BsYXllZENvbW1hbmRzID0gW11cbiAgICAgICAgZm9yIChsZXQgZWxlbSBvZiByZXMudmFsdWUpIHtcbiAgICAgICAgICAgIGVsZW1lbnRJZERpc3BsYXllZENvbW1hbmRzLnB1c2godGhpcy5lbGVtZW50SWREaXNwbGF5ZWQoZWxlbS5FTEVNRU5UKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLnVuaWZ5KGVsZW1lbnRJZERpc3BsYXllZENvbW1hbmRzLCB7XG4gICAgICAgICAgICBleHRyYWN0VmFsdWU6IHRydWVcbiAgICAgICAgfSlcbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBpc1Zpc2libGVcbiJdfQ==
