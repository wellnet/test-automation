/**
 *
 * Retrieve a [cookie](https://code.google.com/p/selenium/wiki/JsonWireProtocol#Cookie_JSON_Object)
 * visible to the current page. You can query a specific cookie by providing the cookie name or
 * retrieve all.
 *
 * <example>
    :getCookie.js
    client
        .setCookie({name: 'test', value: '123'})
        .getCookie('test').then(function(cookie) {
            console.log(cookie); // outputs: { name: 'test', value: '123' }
        })
        .getCookie().then(function(cookies) {
            console.log(cookies); // outputs: [{ name: 'test', value: '123' }]
        });
 * </example>
 *
 * @param {String=} name name of requested cookie
 * @returns {Object|null} requested cookie if existing
 *
 * @uses protocol/cookie
 * @type cookie
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
var getCookie = function getCookie(name) {
    /*!
     * paramter check
     */
    if (typeof name !== 'string') {
        name = null;
    }

    return this.cookie().then(function (res) {
        res.value = res.value || [];

        if (typeof name === 'string') {
            return res.value.filter(function (cookie) {
                return cookie.name === name;
            })[0] || null;
        }

        return res.value || (typeof name === 'string' ? null : []);
    });
};

exports['default'] = getCookie;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy9nZXRDb29raWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQSxJQUFJLFNBQVMsR0FBRyxTQUFaLFNBQVMsQ0FBYSxJQUFJLEVBQUU7Ozs7QUFJNUIsUUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7QUFDMUIsWUFBSSxHQUFHLElBQUksQ0FBQTtLQUNkOztBQUVELFdBQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQUcsRUFBSztBQUMvQixXQUFHLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFBOztBQUUzQixZQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtBQUMxQixtQkFBTyxHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxVQUFDLE1BQU07dUJBQUssTUFBTSxDQUFDLElBQUksS0FBSyxJQUFJO2FBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQTtTQUN2RTs7QUFFRCxlQUFPLEdBQUcsQ0FBQyxLQUFLLEtBQUssT0FBTyxJQUFJLEtBQUssUUFBUSxHQUFHLElBQUksR0FBRyxFQUFFLENBQUEsQUFBQyxDQUFBO0tBQzdELENBQUMsQ0FBQTtDQUNMLENBQUE7O3FCQUVjLFNBQVMiLCJmaWxlIjoiZ2V0Q29va2llLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogUmV0cmlldmUgYSBbY29va2llXShodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3NlbGVuaXVtL3dpa2kvSnNvbldpcmVQcm90b2NvbCNDb29raWVfSlNPTl9PYmplY3QpXG4gKiB2aXNpYmxlIHRvIHRoZSBjdXJyZW50IHBhZ2UuIFlvdSBjYW4gcXVlcnkgYSBzcGVjaWZpYyBjb29raWUgYnkgcHJvdmlkaW5nIHRoZSBjb29raWUgbmFtZSBvclxuICogcmV0cmlldmUgYWxsLlxuICpcbiAqIDxleGFtcGxlPlxuICAgIDpnZXRDb29raWUuanNcbiAgICBjbGllbnRcbiAgICAgICAgLnNldENvb2tpZSh7bmFtZTogJ3Rlc3QnLCB2YWx1ZTogJzEyMyd9KVxuICAgICAgICAuZ2V0Q29va2llKCd0ZXN0JykudGhlbihmdW5jdGlvbihjb29raWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvb2tpZSk7IC8vIG91dHB1dHM6IHsgbmFtZTogJ3Rlc3QnLCB2YWx1ZTogJzEyMycgfVxuICAgICAgICB9KVxuICAgICAgICAuZ2V0Q29va2llKCkudGhlbihmdW5jdGlvbihjb29raWVzKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjb29raWVzKTsgLy8gb3V0cHV0czogW3sgbmFtZTogJ3Rlc3QnLCB2YWx1ZTogJzEyMycgfV1cbiAgICAgICAgfSk7XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogQHBhcmFtIHtTdHJpbmc9fSBuYW1lIG5hbWUgb2YgcmVxdWVzdGVkIGNvb2tpZVxuICogQHJldHVybnMge09iamVjdHxudWxsfSByZXF1ZXN0ZWQgY29va2llIGlmIGV4aXN0aW5nXG4gKlxuICogQHVzZXMgcHJvdG9jb2wvY29va2llXG4gKiBAdHlwZSBjb29raWVcbiAqXG4gKi9cblxubGV0IGdldENvb2tpZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgLyohXG4gICAgICogcGFyYW10ZXIgY2hlY2tcbiAgICAgKi9cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG5hbWUgPSBudWxsXG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuY29va2llKCkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHJlcy52YWx1ZSA9IHJlcy52YWx1ZSB8fCBbXVxuXG4gICAgICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMudmFsdWUuZmlsdGVyKChjb29raWUpID0+IGNvb2tpZS5uYW1lID09PSBuYW1lKVswXSB8fCBudWxsXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzLnZhbHVlIHx8ICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycgPyBudWxsIDogW10pXG4gICAgfSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0Q29va2llXG4iXX0=
