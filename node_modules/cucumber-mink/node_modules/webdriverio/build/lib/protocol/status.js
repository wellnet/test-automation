/**
 *
 * Query the server's current status. The server should respond with a general
 * "HTTP 200 OK" response if it is alive and accepting commands. The response
 * body should be a JSON object describing the state of the server. All server
 * implementations should return two basic objects describing the server's
 * current platform and when the server was built. All fields are optional;
 * if omitted, the client should assume the value is uknown. Furthermore,
 * server implementations may include additional fields not listed here.
 *
 * | Key            | Type   | Description |
 * | -------------- | ------ | ----------- |
 * | build.version  | string | A generic release label (i.e. "2.0rc3") |
 * | build.revision | string | The revision of the local source control client from which the server was built |
 * | build.time     | string | A timestamp from when the server was built |
 * | os.arch        | string | The current system architecture |
 * | os.name        | string | The name of the operating system the server is currently running on: "windows", "linux", etc. |
 * | os.version     | string | The operating system version |
 *
 * @returns {Object} An object describing the general status of the server
 *
 * @see  https://code.google.com/p/selenium/wiki/JsonWireProtocol#GET_/status
 * @type protocol
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
var status = function status() {
    return this.requestHandler.create({
        path: '/status',
        method: 'GET',
        requiresSession: false
    });
};

exports['default'] = status;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9wcm90b2NvbC9zdGF0dXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQSxJQUFJLE1BQU0sR0FBRyxTQUFULE1BQU0sR0FBZTtBQUNyQixXQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDO0FBQzlCLFlBQUksRUFBRSxTQUFTO0FBQ2YsY0FBTSxFQUFFLEtBQUs7QUFDYix1QkFBZSxFQUFFLEtBQUs7S0FDekIsQ0FBQyxDQUFBO0NBQ0wsQ0FBQTs7cUJBRWMsTUFBTSIsImZpbGUiOiJzdGF0dXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBRdWVyeSB0aGUgc2VydmVyJ3MgY3VycmVudCBzdGF0dXMuIFRoZSBzZXJ2ZXIgc2hvdWxkIHJlc3BvbmQgd2l0aCBhIGdlbmVyYWxcbiAqIFwiSFRUUCAyMDAgT0tcIiByZXNwb25zZSBpZiBpdCBpcyBhbGl2ZSBhbmQgYWNjZXB0aW5nIGNvbW1hbmRzLiBUaGUgcmVzcG9uc2VcbiAqIGJvZHkgc2hvdWxkIGJlIGEgSlNPTiBvYmplY3QgZGVzY3JpYmluZyB0aGUgc3RhdGUgb2YgdGhlIHNlcnZlci4gQWxsIHNlcnZlclxuICogaW1wbGVtZW50YXRpb25zIHNob3VsZCByZXR1cm4gdHdvIGJhc2ljIG9iamVjdHMgZGVzY3JpYmluZyB0aGUgc2VydmVyJ3NcbiAqIGN1cnJlbnQgcGxhdGZvcm0gYW5kIHdoZW4gdGhlIHNlcnZlciB3YXMgYnVpbHQuIEFsbCBmaWVsZHMgYXJlIG9wdGlvbmFsO1xuICogaWYgb21pdHRlZCwgdGhlIGNsaWVudCBzaG91bGQgYXNzdW1lIHRoZSB2YWx1ZSBpcyB1a25vd24uIEZ1cnRoZXJtb3JlLFxuICogc2VydmVyIGltcGxlbWVudGF0aW9ucyBtYXkgaW5jbHVkZSBhZGRpdGlvbmFsIGZpZWxkcyBub3QgbGlzdGVkIGhlcmUuXG4gKlxuICogfCBLZXkgICAgICAgICAgICB8IFR5cGUgICB8IERlc2NyaXB0aW9uIHxcbiAqIHwgLS0tLS0tLS0tLS0tLS0gfCAtLS0tLS0gfCAtLS0tLS0tLS0tLSB8XG4gKiB8IGJ1aWxkLnZlcnNpb24gIHwgc3RyaW5nIHwgQSBnZW5lcmljIHJlbGVhc2UgbGFiZWwgKGkuZS4gXCIyLjByYzNcIikgfFxuICogfCBidWlsZC5yZXZpc2lvbiB8IHN0cmluZyB8IFRoZSByZXZpc2lvbiBvZiB0aGUgbG9jYWwgc291cmNlIGNvbnRyb2wgY2xpZW50IGZyb20gd2hpY2ggdGhlIHNlcnZlciB3YXMgYnVpbHQgfFxuICogfCBidWlsZC50aW1lICAgICB8IHN0cmluZyB8IEEgdGltZXN0YW1wIGZyb20gd2hlbiB0aGUgc2VydmVyIHdhcyBidWlsdCB8XG4gKiB8IG9zLmFyY2ggICAgICAgIHwgc3RyaW5nIHwgVGhlIGN1cnJlbnQgc3lzdGVtIGFyY2hpdGVjdHVyZSB8XG4gKiB8IG9zLm5hbWUgICAgICAgIHwgc3RyaW5nIHwgVGhlIG5hbWUgb2YgdGhlIG9wZXJhdGluZyBzeXN0ZW0gdGhlIHNlcnZlciBpcyBjdXJyZW50bHkgcnVubmluZyBvbjogXCJ3aW5kb3dzXCIsIFwibGludXhcIiwgZXRjLiB8XG4gKiB8IG9zLnZlcnNpb24gICAgIHwgc3RyaW5nIHwgVGhlIG9wZXJhdGluZyBzeXN0ZW0gdmVyc2lvbiB8XG4gKlxuICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IGRlc2NyaWJpbmcgdGhlIGdlbmVyYWwgc3RhdHVzIG9mIHRoZSBzZXJ2ZXJcbiAqXG4gKiBAc2VlICBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3NlbGVuaXVtL3dpa2kvSnNvbldpcmVQcm90b2NvbCNHRVRfL3N0YXR1c1xuICogQHR5cGUgcHJvdG9jb2xcbiAqXG4gKi9cblxubGV0IHN0YXR1cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0SGFuZGxlci5jcmVhdGUoe1xuICAgICAgICBwYXRoOiAnL3N0YXR1cycsXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHJlcXVpcmVzU2Vzc2lvbjogZmFsc2VcbiAgICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBzdGF0dXNcbiJdfQ==
