/**
 * Flick on the touch screen using finger motion events. This flick command starts
 * at a particular screen location.
 *
 * @param {String} ID      ID of the element where the flick starts
 * @param {Number} xoffset the x offset in pixels to flick by
 * @param {Number} yoffset the y offset in pixels to flick by
 * @param {Number} speed   the speed in pixels per seconds
 *
 * @see  https://code.google.com/p/selenium/wiki/JsonWireProtocol#session/:sessionId/touch/flick
 * @type protocol
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _utilsErrorHandler = require('../utils/ErrorHandler');

var touchFlick = function touchFlick(id, xoffset, yoffset, speed) {
    var data = {};

    if (typeof id === 'number' && typeof xoffset === 'number') {
        data = {
            xoffset: id,
            yoffset: xoffset
        };
    } else if (!id && typeof xoffset === 'number' && typeof yoffset === 'number') {
        data = { xoffset: xoffset, yoffset: yoffset };
    } else if (typeof id === 'string' && typeof xoffset === 'number' && typeof yoffset === 'number' && typeof speed === 'number') {
        data = { element: id, xoffset: xoffset, yoffset: yoffset, speed: speed };
    } else {
        throw new _utilsErrorHandler.ProtocolError('number or type of arguments don\'t agree with touchFlick command');
    }

    return this.requestHandler.create('/session/:sessionId/touch/flick', data);
};

exports['default'] = touchFlick;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9wcm90b2NvbC90b3VjaEZsaWNrLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lDQWM4Qix1QkFBdUI7O0FBRXJELElBQUksVUFBVSxHQUFHLFNBQWIsVUFBVSxDQUFhLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRTtBQUNwRCxRQUFJLElBQUksR0FBRyxFQUFFLENBQUE7O0FBRWIsUUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQ3ZELFlBQUksR0FBRztBQUNILG1CQUFPLEVBQUUsRUFBRTtBQUNYLG1CQUFPLEVBQUUsT0FBTztTQUNuQixDQUFBO0tBQ0osTUFBTSxJQUFJLENBQUMsRUFBRSxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7QUFDMUUsWUFBSSxHQUFHLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxPQUFPLEVBQVAsT0FBTyxFQUFFLENBQUE7S0FDOUIsTUFBTSxJQUFJLE9BQU8sRUFBRSxLQUFLLFFBQVEsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUMxSCxZQUFJLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBUCxPQUFPLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxLQUFLLEVBQUwsS0FBSyxFQUFFLENBQUE7S0FDbEQsTUFBTTtBQUNILGNBQU0scUNBQWtCLGtFQUFrRSxDQUFDLENBQUE7S0FDOUY7O0FBRUQsV0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRSxJQUFJLENBQUMsQ0FBQTtDQUM3RSxDQUFBOztxQkFFYyxVQUFVIiwiZmlsZSI6InRvdWNoRmxpY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZsaWNrIG9uIHRoZSB0b3VjaCBzY3JlZW4gdXNpbmcgZmluZ2VyIG1vdGlvbiBldmVudHMuIFRoaXMgZmxpY2sgY29tbWFuZCBzdGFydHNcbiAqIGF0IGEgcGFydGljdWxhciBzY3JlZW4gbG9jYXRpb24uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IElEICAgICAgSUQgb2YgdGhlIGVsZW1lbnQgd2hlcmUgdGhlIGZsaWNrIHN0YXJ0c1xuICogQHBhcmFtIHtOdW1iZXJ9IHhvZmZzZXQgdGhlIHggb2Zmc2V0IGluIHBpeGVscyB0byBmbGljayBieVxuICogQHBhcmFtIHtOdW1iZXJ9IHlvZmZzZXQgdGhlIHkgb2Zmc2V0IGluIHBpeGVscyB0byBmbGljayBieVxuICogQHBhcmFtIHtOdW1iZXJ9IHNwZWVkICAgdGhlIHNwZWVkIGluIHBpeGVscyBwZXIgc2Vjb25kc1xuICpcbiAqIEBzZWUgIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3Avc2VsZW5pdW0vd2lraS9Kc29uV2lyZVByb3RvY29sI3Nlc3Npb24vOnNlc3Npb25JZC90b3VjaC9mbGlja1xuICogQHR5cGUgcHJvdG9jb2xcbiAqXG4gKi9cblxuaW1wb3J0IHsgUHJvdG9jb2xFcnJvciB9IGZyb20gJy4uL3V0aWxzL0Vycm9ySGFuZGxlcidcblxubGV0IHRvdWNoRmxpY2sgPSBmdW5jdGlvbiAoaWQsIHhvZmZzZXQsIHlvZmZzZXQsIHNwZWVkKSB7XG4gICAgbGV0IGRhdGEgPSB7fVxuXG4gICAgaWYgKHR5cGVvZiBpZCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHhvZmZzZXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGRhdGEgPSB7XG4gICAgICAgICAgICB4b2Zmc2V0OiBpZCxcbiAgICAgICAgICAgIHlvZmZzZXQ6IHhvZmZzZXRcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIWlkICYmIHR5cGVvZiB4b2Zmc2V0ID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgeW9mZnNldCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgZGF0YSA9IHsgeG9mZnNldCwgeW9mZnNldCB9XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnICYmIHR5cGVvZiB4b2Zmc2V0ID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgeW9mZnNldCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHNwZWVkID09PSAnbnVtYmVyJykge1xuICAgICAgICBkYXRhID0geyBlbGVtZW50OiBpZCwgeG9mZnNldCwgeW9mZnNldCwgc3BlZWQgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBQcm90b2NvbEVycm9yKCdudW1iZXIgb3IgdHlwZSBvZiBhcmd1bWVudHMgZG9uXFwndCBhZ3JlZSB3aXRoIHRvdWNoRmxpY2sgY29tbWFuZCcpXG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdEhhbmRsZXIuY3JlYXRlKCcvc2Vzc2lvbi86c2Vzc2lvbklkL3RvdWNoL2ZsaWNrJywgZGF0YSlcbn1cblxuZXhwb3J0IGRlZmF1bHQgdG91Y2hGbGlja1xuIl19
