/**
 *
 * Get the value of an element's attribute.
 *
 * @param {String} ID             ID of a WebElement JSON object to route the command to
 * @param {String} attributeName  attribute name of element you want to receive
 *
 * @returns {String|null} The value of the attribute, or null if it is not set on the element.
 *
 * @see  https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/element/:id/attribute/:name
 * @type protocol
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _utilsErrorHandler = require('../utils/ErrorHandler');

var elementIdAttribute = function elementIdAttribute(id, attributeName) {
    if (typeof id !== 'string' && typeof id !== 'number' || typeof attributeName !== 'string') {
        throw new _utilsErrorHandler.ProtocolError('number or type of arguments don\'t agree with elementIdAttribute protocol command');
    }

    return this.requestHandler.create('/session/:sessionId/element/' + id + '/attribute/' + attributeName);
};

exports['default'] = elementIdAttribute;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9wcm90b2NvbC9lbGVtZW50SWRBdHRyaWJ1dGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBYzhCLHVCQUF1Qjs7QUFFckQsSUFBSSxrQkFBa0IsR0FBRyxTQUFyQixrQkFBa0IsQ0FBYSxFQUFFLEVBQUUsYUFBYSxFQUFFO0FBQ2xELFFBQUksQUFBQyxPQUFPLEVBQUUsS0FBSyxRQUFRLElBQUksT0FBTyxFQUFFLEtBQUssUUFBUSxJQUFLLE9BQU8sYUFBYSxLQUFLLFFBQVEsRUFBRTtBQUN6RixjQUFNLHFDQUFrQixtRkFBbUYsQ0FBQyxDQUFBO0tBQy9HOztBQUVELFdBQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLGtDQUFnQyxFQUFFLG1CQUFjLGFBQWEsQ0FBRyxDQUFBO0NBQ3BHLENBQUE7O3FCQUVjLGtCQUFrQiIsImZpbGUiOiJlbGVtZW50SWRBdHRyaWJ1dGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqXG4gKiBHZXQgdGhlIHZhbHVlIG9mIGFuIGVsZW1lbnQncyBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IElEICAgICAgICAgICAgIElEIG9mIGEgV2ViRWxlbWVudCBKU09OIG9iamVjdCB0byByb3V0ZSB0aGUgY29tbWFuZCB0b1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJpYnV0ZU5hbWUgIGF0dHJpYnV0ZSBuYW1lIG9mIGVsZW1lbnQgeW91IHdhbnQgdG8gcmVjZWl2ZVxuICpcbiAqIEByZXR1cm5zIHtTdHJpbmd8bnVsbH0gVGhlIHZhbHVlIG9mIHRoZSBhdHRyaWJ1dGUsIG9yIG51bGwgaWYgaXQgaXMgbm90IHNldCBvbiB0aGUgZWxlbWVudC5cbiAqXG4gKiBAc2VlICBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3NlbGVuaXVtL3dpa2kvSnNvbldpcmVQcm90b2NvbCMvc2Vzc2lvbi86c2Vzc2lvbklkL2VsZW1lbnQvOmlkL2F0dHJpYnV0ZS86bmFtZVxuICogQHR5cGUgcHJvdG9jb2xcbiAqXG4gKi9cblxuaW1wb3J0IHsgUHJvdG9jb2xFcnJvciB9IGZyb20gJy4uL3V0aWxzL0Vycm9ySGFuZGxlcidcblxubGV0IGVsZW1lbnRJZEF0dHJpYnV0ZSA9IGZ1bmN0aW9uIChpZCwgYXR0cmlidXRlTmFtZSkge1xuICAgIGlmICgodHlwZW9mIGlkICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgaWQgIT09ICdudW1iZXInKSB8fCB0eXBlb2YgYXR0cmlidXRlTmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFByb3RvY29sRXJyb3IoJ251bWJlciBvciB0eXBlIG9mIGFyZ3VtZW50cyBkb25cXCd0IGFncmVlIHdpdGggZWxlbWVudElkQXR0cmlidXRlIHByb3RvY29sIGNvbW1hbmQnKVxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RIYW5kbGVyLmNyZWF0ZShgL3Nlc3Npb24vOnNlc3Npb25JZC9lbGVtZW50LyR7aWR9L2F0dHJpYnV0ZS8ke2F0dHJpYnV0ZU5hbWV9YClcbn1cblxuZXhwb3J0IGRlZmF1bHQgZWxlbWVudElkQXR0cmlidXRlXG4iXX0=
