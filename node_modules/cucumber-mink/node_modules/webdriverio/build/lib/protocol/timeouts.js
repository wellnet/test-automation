/**
 * Configure the amount of time that a particular type of operation can execute
 * for before they are aborted and a |Timeout| error is returned to the client.
 *
 * @param {String} type The type of operation to set the timeout for. Valid values are:<br>- **script** for script timeouts<br>- **implicit** for modifying the implicit wait timeout<br>- **page load** for setting a page load timeout.
 * @param {Number} ms   The amount of time, in milliseconds, that time-limited commands are permitted to run.
 *
 * @see https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/timeouts
 * @type protocol
 *
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _utilsErrorHandler = require('../utils/ErrorHandler');

var timeouts = function timeouts(type, ms) {
    /*!
     * parameter check
     */
    if (typeof type !== 'string' || typeof ms !== 'number') {
        throw new _utilsErrorHandler.ProtocolError('number or type of arguments don\'t agree with timeouts protocol command');
    }

    return this.requestHandler.create('/session/:sessionId/timeouts', {
        type: type,
        ms: ms
    });
};

exports['default'] = timeouts;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9wcm90b2NvbC90aW1lb3V0cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7aUNBWThCLHVCQUF1Qjs7QUFFckQsSUFBSSxRQUFRLEdBQUcsU0FBWCxRQUFRLENBQWEsSUFBSSxFQUFFLEVBQUUsRUFBRTs7OztBQUkvQixRQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLEVBQUU7QUFDcEQsY0FBTSxxQ0FBa0IseUVBQXlFLENBQUMsQ0FBQTtLQUNyRzs7QUFFRCxXQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLDhCQUE4QixFQUFFO0FBQzlELFlBQUksRUFBRSxJQUFJO0FBQ1YsVUFBRSxFQUFFLEVBQUU7S0FDVCxDQUFDLENBQUE7Q0FDTCxDQUFBOztxQkFFYyxRQUFRIiwiZmlsZSI6InRpbWVvdXRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb25maWd1cmUgdGhlIGFtb3VudCBvZiB0aW1lIHRoYXQgYSBwYXJ0aWN1bGFyIHR5cGUgb2Ygb3BlcmF0aW9uIGNhbiBleGVjdXRlXG4gKiBmb3IgYmVmb3JlIHRoZXkgYXJlIGFib3J0ZWQgYW5kIGEgfFRpbWVvdXR8IGVycm9yIGlzIHJldHVybmVkIHRvIHRoZSBjbGllbnQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgVGhlIHR5cGUgb2Ygb3BlcmF0aW9uIHRvIHNldCB0aGUgdGltZW91dCBmb3IuIFZhbGlkIHZhbHVlcyBhcmU6PGJyPi0gKipzY3JpcHQqKiBmb3Igc2NyaXB0IHRpbWVvdXRzPGJyPi0gKippbXBsaWNpdCoqIGZvciBtb2RpZnlpbmcgdGhlIGltcGxpY2l0IHdhaXQgdGltZW91dDxicj4tICoqcGFnZSBsb2FkKiogZm9yIHNldHRpbmcgYSBwYWdlIGxvYWQgdGltZW91dC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBtcyAgIFRoZSBhbW91bnQgb2YgdGltZSwgaW4gbWlsbGlzZWNvbmRzLCB0aGF0IHRpbWUtbGltaXRlZCBjb21tYW5kcyBhcmUgcGVybWl0dGVkIHRvIHJ1bi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3Avc2VsZW5pdW0vd2lraS9Kc29uV2lyZVByb3RvY29sIy9zZXNzaW9uLzpzZXNzaW9uSWQvdGltZW91dHNcbiAqIEB0eXBlIHByb3RvY29sXG4gKlxuICovXG5cbmltcG9ydCB7IFByb3RvY29sRXJyb3IgfSBmcm9tICcuLi91dGlscy9FcnJvckhhbmRsZXInXG5cbmxldCB0aW1lb3V0cyA9IGZ1bmN0aW9uICh0eXBlLCBtcykge1xuICAgIC8qIVxuICAgICAqIHBhcmFtZXRlciBjaGVja1xuICAgICAqL1xuICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gJ3N0cmluZycgfHwgdHlwZW9mIG1zICE9PSAnbnVtYmVyJykge1xuICAgICAgICB0aHJvdyBuZXcgUHJvdG9jb2xFcnJvcignbnVtYmVyIG9yIHR5cGUgb2YgYXJndW1lbnRzIGRvblxcJ3QgYWdyZWUgd2l0aCB0aW1lb3V0cyBwcm90b2NvbCBjb21tYW5kJylcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0SGFuZGxlci5jcmVhdGUoJy9zZXNzaW9uLzpzZXNzaW9uSWQvdGltZW91dHMnLCB7XG4gICAgICAgIHR5cGU6IHR5cGUsXG4gICAgICAgIG1zOiBtc1xuICAgIH0pXG59XG5cbmV4cG9ydCBkZWZhdWx0IHRpbWVvdXRzXG4iXX0=
