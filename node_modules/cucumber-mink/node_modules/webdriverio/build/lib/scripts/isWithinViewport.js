/**
 * check if element is visible and within the viewport
 *
 * @param {String}  elements  DOM elements to check against
 *
 * @see  waitForVisible
 */

'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});
var isWithinViewport = function isWithinViewport(elements) {
    var db = document.body,
        dde = document.documentElement,
        result = [];

    if (elements.length === 0) {
        throw new Error('NoSuchElement');
    }

    for (var i = 0; i < elements.length; ++i) {
        var elem = elements[i],
            isWithinViewport = true;

        while (elem.parentNode && elem.parentNode.getBoundingClientRect) {

            var elemDimension = elem.getBoundingClientRect(),
                elemComputedStyle = window.getComputedStyle(elem),
                documentDimension = {
                width: Math.max(db.scrollTop || 0, dde.scrollTop || 0, db.offsetwidth || 0, dde.offsetWidth || 0, db.clientWidth || 0, dde.clientWidth || 0),
                height: Math.max(db.scrollheight || 0, dde.scrollHeight || 0, db.offsetHeight || 0, dde.offsetHeight || 0, db.clientHeight || 0, dde.clientHeight || 0)
            };

            isWithinViewport = isWithinViewport && elemComputedStyle.display !== 'none' && elemComputedStyle.visibility === 'visible' && parseFloat(elemComputedStyle.opacity, 10) > 0 && elemDimension.bottom >= 0 && elemDimension.top <= documentDimension.height && elemDimension.right >= 0 && elemDimension.left <= documentDimension.width;

            elem = elem.parentNode;
        }
        result.push(isWithinViewport);
    }
    return result;
};

exports['default'] = isWithinViewport;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9zY3JpcHRzL2lzV2l0aGluVmlld3BvcnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVFBLElBQUksZ0JBQWdCLEdBQUcsMEJBQVUsUUFBUSxFQUFFO0FBQ3ZDLFFBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJO1FBQ2xCLEdBQUcsR0FBRyxRQUFRLENBQUMsZUFBZTtRQUM5QixNQUFNLEdBQUcsRUFBRSxDQUFDOztBQUVoQixRQUFHLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBQ3RCLGNBQU0sSUFBSSxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7S0FDcEM7O0FBRUQsU0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7QUFDdEMsWUFBSSxJQUFJLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNsQixnQkFBZ0IsR0FBRyxJQUFJLENBQUM7O0FBRTVCLGVBQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLHFCQUFxQixFQUFFOztBQUU3RCxnQkFBSSxhQUFhLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixFQUFFO2dCQUM1QyxpQkFBaUIsR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDO2dCQUNqRCxpQkFBaUIsR0FBRztBQUNoQixxQkFBSyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLFNBQVMsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLFNBQVMsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUM7QUFDNUksc0JBQU0sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxZQUFZLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxZQUFZLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxZQUFZLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxZQUFZLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxZQUFZLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxZQUFZLElBQUksQ0FBQyxDQUFDO2FBQzFKLENBQUM7O0FBRU4sNEJBQWdCLEdBQUcsZ0JBQWdCLElBQ2YsaUJBQWlCLENBQUMsT0FBTyxLQUFLLE1BQU0sSUFDcEMsaUJBQWlCLENBQUMsVUFBVSxLQUFLLFNBQVMsSUFDMUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLElBQzdDLGFBQWEsQ0FBQyxNQUFNLElBQUksQ0FBQyxJQUN6QixhQUFhLENBQUMsR0FBRyxJQUFJLGlCQUFpQixDQUFDLE1BQU0sSUFDN0MsYUFBYSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQ3hCLGFBQWEsQ0FBQyxJQUFJLElBQUksaUJBQWlCLENBQUMsS0FBSyxBQUFDLENBQUM7O0FBRW5FLGdCQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztTQUUxQjtBQUNELGNBQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztLQUNqQztBQUNELFdBQU8sTUFBTSxDQUFDO0NBQ2pCLENBQUE7O3FCQUVjLGdCQUFnQiIsImZpbGUiOiJpc1dpdGhpblZpZXdwb3J0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBjaGVjayBpZiBlbGVtZW50IGlzIHZpc2libGUgYW5kIHdpdGhpbiB0aGUgdmlld3BvcnRcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gIGVsZW1lbnRzICBET00gZWxlbWVudHMgdG8gY2hlY2sgYWdhaW5zdFxuICpcbiAqIEBzZWUgIHdhaXRGb3JWaXNpYmxlXG4gKi9cblxubGV0IGlzV2l0aGluVmlld3BvcnQgPSBmdW5jdGlvbiAoZWxlbWVudHMpIHtcbiAgICB2YXIgZGIgPSBkb2N1bWVudC5ib2R5LFxuICAgICAgICBkZGUgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsXG4gICAgICAgIHJlc3VsdCA9IFtdO1xuXG4gICAgaWYoZWxlbWVudHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm9TdWNoRWxlbWVudCcpO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgdmFyIGVsZW0gPSBlbGVtZW50c1tpXSxcbiAgICAgICAgICAgIGlzV2l0aGluVmlld3BvcnQgPSB0cnVlO1xuXG4gICAgICAgIHdoaWxlIChlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5wYXJlbnROb2RlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCkge1xuXG4gICAgICAgICAgICB2YXIgZWxlbURpbWVuc2lvbiA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCksXG4gICAgICAgICAgICAgICAgZWxlbUNvbXB1dGVkU3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtKSxcbiAgICAgICAgICAgICAgICBkb2N1bWVudERpbWVuc2lvbiA9IHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IE1hdGgubWF4KGRiLnNjcm9sbFRvcCB8fCAwLCBkZGUuc2Nyb2xsVG9wIHx8IDAsIGRiLm9mZnNldHdpZHRoIHx8IDAsIGRkZS5vZmZzZXRXaWR0aCB8fCAwLCBkYi5jbGllbnRXaWR0aCB8fCAwLCBkZGUuY2xpZW50V2lkdGggfHwgMCksXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogTWF0aC5tYXgoZGIuc2Nyb2xsaGVpZ2h0IHx8IDAsIGRkZS5zY3JvbGxIZWlnaHQgfHwgMCwgZGIub2Zmc2V0SGVpZ2h0IHx8IDAsIGRkZS5vZmZzZXRIZWlnaHQgfHwgMCwgZGIuY2xpZW50SGVpZ2h0IHx8IDAsIGRkZS5jbGllbnRIZWlnaHQgfHwgMClcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBpc1dpdGhpblZpZXdwb3J0ID0gaXNXaXRoaW5WaWV3cG9ydCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChlbGVtQ29tcHV0ZWRTdHlsZS5kaXNwbGF5ICE9PSAnbm9uZScgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbUNvbXB1dGVkU3R5bGUudmlzaWJpbGl0eSA9PT0gJ3Zpc2libGUnICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlRmxvYXQoZWxlbUNvbXB1dGVkU3R5bGUub3BhY2l0eSwgMTApID4gMCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtRGltZW5zaW9uLmJvdHRvbSA+PSAwICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1EaW1lbnNpb24udG9wIDw9IGRvY3VtZW50RGltZW5zaW9uLmhlaWdodCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbGVtRGltZW5zaW9uLnJpZ2h0ID49IDAgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbURpbWVuc2lvbi5sZWZ0IDw9IGRvY3VtZW50RGltZW5zaW9uLndpZHRoKTtcblxuICAgICAgICAgICAgZWxlbSA9IGVsZW0ucGFyZW50Tm9kZTtcblxuICAgICAgICB9XG4gICAgICAgIHJlc3VsdC5wdXNoKGlzV2l0aGluVmlld3BvcnQpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc1dpdGhpblZpZXdwb3J0XG4iXX0=
